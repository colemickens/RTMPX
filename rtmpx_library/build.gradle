plugins {
    id 'com.android.library'
}
apply from: './publish.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    def propCode = "${versionCode}".toInteger()
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode propCode
        versionName "${version}"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    packagingOptions {
        pickFirst '**/*.so'
    }
}

dependencies {

    implementation "androidx.appcompat:appcompat:1.3.0"
    def camerax_version = "1.0.0"
// CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
// CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
// CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha24"
}

task buildReleaseAAR(type: Copy) {
    def libPath = '../app/libs/'
    from('build/outputs/aar')
    into(libPath)
    include('rtmpx_library-release.aar')
    rename('rtmpx_library-release.aar', 'rtmpx-' + "${version}" + '.aar')
}

buildReleaseAAR.dependsOn('assembleRelease')

